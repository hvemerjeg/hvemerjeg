#!/bin/bash
#This script is for subdomain enumeration through brute-force. All the subdomains are found through an HTTP request based on the status code of the 
#HTTP response
#We request the domain to the user
echo -n "Enter the domain: "
#We store the domin in the domain variable
read domain
#We request the path to the wordlist
echo -n "Enter path to wordlist: "
#Storing the wordlist in the wordlist variable. with the echo we are getting a new emmpty line.
read wordlist; echo
#To iterate through the wordlist we store the result of executing cat to the wordlist in the subdomain variable
subdomains=$(cat $wordlist)
#Iterating through each line/subdomain of the wordlist
for subdomain in $subdomains
do
#We are making an http request using the command curl. We use the parameter -s to not get a specific output and we are using the flag -I to only get the headers of the response. Finally using RegEx we are taking only the status code
#of the response
        r=$(curl --connect-timeout 1 -sI "http://"$subdomain"."$domain 2>&1 | grep -m 1 -Eo '[0-9]{3}')
        #If we get a response where the status code is different than 404 or nothing(when we were not able to establish a connection) then we know that the subdomain exists.
        #In many cases we are going to obtain false positives, because when a domain is not registered normally we are redirected to another page that may sell domains.
        if [[ $r != "404" && $r != "" ]]
        then
                echo -e "\033[1;32;40m[+] Subdomain found! --> "$subdomain
        fi
done
