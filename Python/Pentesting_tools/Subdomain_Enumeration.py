#THIS IS A SIMPLE HTTP SUBDOMAIN ENUMERATION SCRIPT. 
#This tool only works for web browser accessible domains(HTTP protocol), you will obtain an error if you try to discover a domain of a service/protocol 
#different than HTTP. This is because the script uses HTTP requests to discover a domain based on the HTTP code of the response.
from requests import get#We import the requests module for being able to send HTTP requests.
from os import strerror#We import the strerror function from the os module to translate the number of errno property of IOError
#into a descriptive string.
def subdomain_enum(wordlist: str, domain: str):#This is our main function, where the magic happens.
    try:#We make use of the try/except statement to handle possible errors when opening the wordlist.
        archive = open(wordlist, 'r')#We define the variable archive that will hold the content of the wordlist.
        for subdomain in archive:#We iterate through each line of the wordlist.
            try:#We make use of the try/except statement(once again) to handle possible errors when making HTTP requests.
                r = get(f"http://{subdomain.strip()}.{domain}", timeout=1)#We craft our request using formatting and we save it into the variable r.
#We make use of the strip method to get rid of the new line character(\n) that we sometimes obtain when managing the lines of a file.
                if r.status_code != 404:
                    print(f"\033[1;32;40m[+] Subdomain found!: {subdomain.strip()}\033[0m")#If the status code of the request is different
#from 404(not found) we know that the subdomain exists. We are using the ANSI color code to obtain a colorized output.
            except:
                continue
        archive.close()#We close the wordlist.
    except IOError as e:
        print(f"\033[1;31;40mI/O Error occurred: {strerror(e.errno)}\033[0m")
        exit()

if __name__ == '__main__':
    path_to_file = input('Enter the path to the wordlist: ')
    domain_name = input('Enter the domain name: ')
    subdomain_enum(path_to_file, domain_name)
